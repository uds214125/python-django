
site-packages: is the global/default directory for the packages

packages into the global site-packages directory

From Official : 
virtualenv :
------------------
It creates an environment that has its own installation directories, 
that doesn’t share libraries with other virtualenv environments 
(and optionally doesn’t access the globally installed libraries either).

There are 3 ways : 
	Python 3’s venv module 
	virtual-python
	zc.buildout

virtualenv:
------------
>pip install virtualenv
>virtualenv myenv
>activate

>django-admin --version
>deactivate

virtualenvwrapper:
----------------------
	Features
		Organizes all of your virtual environments in one place.
		Wrappers for managing your virtual environments (create, delete, copy).
		Use a single command to switch between environments.

>pip install virtualenvwrapper-win
>mkvirtualenv env_name		
>pip install Django
>django-admin --version
> pip install django
>deactivate/activate

Switching environment:
> workon env_name 


Windows Env : 
		To set :   
			> set variable_name=value
		To get :
			> echo %variable_name%
		To unset:
			> set variable_name=
		
		virtualenv --version
		--prompt=PROMPT       Provides an alternative prompt prefix for this	
		
		
	django vs angular 
	django : server side framework
	angular : client side framework
	
	pip install -e django/
	
	conda create --prefix C:/tensorflow2 python=3.7
	
	# pip install -r requirements.txt
	
	# template engine : ninja/ Genshi/ Jinja/ Mako or default 
	
	# 
---------------Prjects/Application-------------
create admin project 
-----------------------
>django-admin startproject project_name

start a server 
------------------
>python manage.py runserver

create new app :
--------------
>python manage.py startapp app_name

postgreSql : port 5432, root, root 

python + postgreSql
----------------------
install postgreSql
--------------------
link: 
create user and database :
-------------------------
>CREATE USER uds WITH PASSWORD 'uds';
>CREATE DATABASE demo
    WITH 
    OWNER = postgres
    ENCODING = 'UTF8'
    CONNECTION LIMIT = -1;

COMMENT ON DATABASE demo
    IS 'demo database for python postgres';


install adapter/connector :
---------------------------------
> pip install psycopg2

add db configuration in settings :
--------------------------------------
 'default':{
        'ENGINE':'django.db.backends.postgresql_psycopg2',
        'NAME':'demo',
        'USER':'uds',
        'PASSWORD':'uds',
        'HOST':'127.0.0.1',
        'PORT' : '5432', 
    }

>pip install Pillow  ( for handling image)

-------------Create Model ------------------
add your app in : 
INSTALLED_APPS = [
		'AdminApi.apps.AdminapiConfig'
]
create model :
-----------------
class Person(models.Model):
    first_name = models.CharField(max_length=30)
    last_name = models.CharField(max_length=30)
    address = models.CharField(max_length=100)

create a migrate file :
--------------------------
>python manage.py makemigrations
output : 
	Migrations for 'AdminApi':
    AdminApi\migrations\0001_initial.py
    - Create model Person
>A file will be created in migrations folder. Note: Each time you will modify model, a new migration file will be created. 

to migrate: it will create table in selected db
--------------------------------------------------
# python manage.py sqlmigrate app_name file_to_be_migrate

	>python manage.py sqlmigrate AdminApi 00001 
	>python manage.py migrate 
or, 
 >python manage.py migrate 


For admin only :
----------------------
>python manage.py createsuperuser 

> login : localhost:8000/admin


-------------If any user / auth permission error------------
-- ALTER ROLE root WITH PASSWORD 'root';
>CREATE USER uds WITH PASSWORD 'uds';

>> from django.contrib.auth.models import User
>>> User.objects.create(username='alice', pk=1)

Get help : https://docs.djangoproject.com/en/2.2/ref/django-admin/
-------------------
>python manage.py help


PostgreSql : http://www.postgresqltutorial.com/postgresql-change-password/


Django + PostgreSql:
--------------------
Intro : 1
Basic:
	Register: 1
	Login:1
	Logout:
	Session:
	Error:
	CRUD:
Advance:
